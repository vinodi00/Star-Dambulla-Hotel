{"ast":null,"code":"var _jsxFileName = \"/Users/vinodisaumya/Documents/GitHub/Star-Dambulla-Hotel/client/src/screens/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your_stripe_publishable_key');\nconst PaymentForm = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    try {\n      const response = await axios.post('/api/payment/process', {\n        amount: parseFloat(amount) * 100\n      }); // Convert amount to cents\n      const {\n        clientSecret\n      } = response.data;\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (result.error) {\n        console.error('Payment failed:', result.error.message);\n        alert('Payment failed. Please try again later.');\n      } else {\n        console.log('Payment successful');\n        alert('Payment successful!');\n      }\n    } catch (error) {\n      console.error('Error processing payment:', error);\n      alert('Failed to process payment. Please try again later.');\n    }\n  };\n  const handleChange = e => {\n    setAmount(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Amount ($):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: handleChange,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Card details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        className: \"form-control\",\n        options: {\n          style: {\n            base: {\n              fontSize: '16px'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentForm, \"oKWoRUynmZAFjDwoiqjGpJkOCT0=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nconst StripePaymentForm = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c2 = StripePaymentForm;\nexport default StripePaymentForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"StripePaymentForm\");","map":{"version":3,"names":["React","useState","Elements","CardElement","useStripe","useElements","axios","loadStripe","jsxDEV","_jsxDEV","stripePromise","PaymentForm","_s","amount","setAmount","stripe","elements","handleSubmit","e","preventDefault","response","post","parseFloat","clientSecret","data","result","confirmCardPayment","payment_method","card","getElement","error","console","message","alert","log","handleChange","target","value","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","options","style","base","fontSize","_c","StripePaymentForm","_c2","$RefreshReg$"],"sources":["/Users/vinodisaumya/Documents/GitHub/Star-Dambulla-Hotel/client/src/screens/PaymentForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('your_stripe_publishable_key');\n\nconst PaymentForm = () => {\n    const [amount, setAmount] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!stripe || !elements) {\n            return;\n        }\n\n        try {\n            const response = await axios.post('/api/payment/process', { amount: parseFloat(amount) * 100 }); // Convert amount to cents\n            const { clientSecret } = response.data;\n            const result = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: elements.getElement(CardElement),\n                },\n            });\n\n            if (result.error) {\n                console.error('Payment failed:', result.error.message);\n                alert('Payment failed. Please try again later.');\n            } else {\n                console.log('Payment successful');\n                alert('Payment successful!');\n            }\n        } catch (error) {\n            console.error('Error processing payment:', error);\n            alert('Failed to process payment. Please try again later.');\n        }\n    };\n\n    const handleChange = (e) => {\n        setAmount(e.target.value);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Amount ($):</label>\n                <input type=\"number\" value={amount} onChange={handleChange} className=\"form-control\" />\n            </div>\n            <div className=\"mb-3\">\n                <label className=\"form-label\">Card details:</label>\n                <CardElement className=\"form-control\" options={{ style: { base: { fontSize: '16px' } } }} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit Payment</button>\n        </form>\n    );\n};\n\nconst StripePaymentForm = () => {\n    return (\n        <Elements stripe={stripePromise}>\n            <PaymentForm />\n        </Elements>\n    );\n};\n\nexport default StripePaymentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}