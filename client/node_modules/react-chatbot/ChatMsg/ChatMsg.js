'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Avatar = require('../Avatar');

var _Avatar2 = _interopRequireDefault(_Avatar);

var _Timestamp = require('../Timestamp');

var _Timestamp2 = _interopRequireDefault(_Timestamp);

var _ChatMsgWrapper = require('../ChatMsgWrapper');

var _ChatMsgWrapper2 = _interopRequireDefault(_ChatMsgWrapper);

var _ChatMsg = require('./ChatMsg.css');

var _ChatMsg2 = _interopRequireDefault(_ChatMsg);

var _WithConditionalType = require('../hocs/WithConditionalType');

var _WithConditionalType2 = _interopRequireDefault(_WithConditionalType);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ConditionalChatMsg = (0, _WithConditionalType2.default)(_ChatMsgWrapper2.default);

/** Component with assembles the type component depending on the type of response along with appropriate avatar */

var ChatMsg = function (_PureComponent) {
  _inherits(ChatMsg, _PureComponent);

  function ChatMsg() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ChatMsg);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ChatMsg.__proto__ || Object.getPrototypeOf(ChatMsg)).call.apply(_ref, [this].concat(args))), _this), _this.rederChatMsg = function (_ref2) {
      var self = _ref2.self,
          selfIcon = _ref2.selfIcon,
          showSelfAvatar = _ref2.showSelfAvatar,
          botIcon = _ref2.botIcon,
          determineTypeComp = _ref2.determineTypeComp,
          others = _objectWithoutProperties(_ref2, ['self', 'selfIcon', 'showSelfAvatar', 'botIcon', 'determineTypeComp']);

      return self ? _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(_ChatMsg2.default.chatMsgWrapper, _ChatMsg2.default.selfWrapper) },
        _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)(_ChatMsg2.default.msg, _ChatMsg2.default.selfMsg) },
          _react2.default.createElement(ConditionalChatMsg, Object.assign({}, others, {
            conditionalFunc: determineTypeComp,
            className: _ChatMsg2.default.selfMsgWrapper
          })),
          showSelfAvatar && _react2.default.createElement(_Avatar2.default, { icon: selfIcon })
        ),
        _react2.default.createElement(_Timestamp2.default, null)
      ) : _react2.default.createElement(
        'div',
        { className: _ChatMsg2.default.chatMsgWrapper },
        _react2.default.createElement(
          'div',
          { className: _ChatMsg2.default.msg },
          _react2.default.createElement(_Avatar2.default, { icon: botIcon }),
          _react2.default.createElement(ConditionalChatMsg, Object.assign({}, others, {
            conditionalFunc: determineTypeComp,
            className: (0, _classnames2.default)(_ChatMsg2.default.botMsgWrapper, _defineProperty({}, _ChatMsg2.default.chart, others.type.includes('CHART')))
          }))
        ),
        _react2.default.createElement(_Timestamp2.default, null)
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ChatMsg, [{
    key: 'render',
    value: function render() {
      return this.rederChatMsg(this.props);
    }
  }]);

  return ChatMsg;
}(_react.PureComponent);

ChatMsg.displayName = 'ChatMsg';

ChatMsg.propTypes = {
  /** Indicates whether its a self/user input response */
  self: _propTypes2.default.bool,
  /** User's avatar icon */
  selfIcon: _propTypes2.default.string.isRequired,
  /** Determines whether user's avatar needs to be shown are not */
  showSelfAvatar: _propTypes2.default.bool.isRequired,
  /** Bot avatar icon */
  botIcon: _propTypes2.default.string.isRequired,
  /** Function which determines the type of components to be used for the given response */
  determineTypeComp: _propTypes2.default.func.isRequired,
  /** Response to be displayed */
  data: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
};

ChatMsg.defaultPorps = {
  self: false
};

exports.default = ChatMsg;